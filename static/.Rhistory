max = max(),
`25%` = quantile(.25),
`50%` = quantile(.50),
`75%` = quantile(.75),
)
wine_raw %>%
summarise(
count = n(),
mean = mean(),
sd = sd(),
min = min(),
max = max(),
`25%` = quantile(.25),
`50%` = quantile(.50),
`75%` = quantile(.75),
)
wine_raw %>%
summarise(
count = n(),
mean = mean(),
sd = sd(),
min = min(),
max = max(),
`25%` = quantile(.,.25),
`50%` = quantile(.,.50),
`75%` = quantile(.,.75),
)
wine_raw %>%
summarise(
count = n(),
mean = mean(.),
sd = sd(.),
min = min(.),
max = max(.),
`25%` = quantile(.,.25),
`50%` = quantile(.,.50),
`75%` = quantile(.,.75),
)
wine_raw %>%
summarise_all(
count = n(),
mean = mean(),
sd = sd(),
min = min(),
max = max(),
`25%` = quantile(.25),
`50%` = quantile(.50),
`75%` = quantile(.75),
) -> descriptive_stats
wine_raw %>%
summarise_all(
list(n,
mean,
sd,
min,
max,
quantile(.25),
quantile(.50),
quantile(.75)
)
) -> descriptive_stats
wine_raw %>%
summarise_all(
list(n,
mean,
sd,
min,
max
)
) -> descriptive_stats
vino %>%
summarise_all(
list(n,
mean,
sd,
min,
max
)
) -> descriptive_stats
summary(wine_raw)
summarise(wine_raw)
wine_raw %>%
summarise_all(
list(n,
mean,
sd,
min,
max
)
) -> descriptive_stats
wine_raw %>%
summarise_all(
list(n(),
mean,
sd,
min,
max
)
) -> descriptive_stats
wine_raw %>%
summarise_all(
list(n,
mean,
sd,
min,
max
)
) -> descriptive_stats
wine_raw %>%
summarise_all(
list(mean,
sd,
min,
max
)
) -> descriptive_stats
descriptive_stats
View(descriptive_stats)
wine_raw %>%
summarise_all(
list(mean,
sd,
min,
max
)
) -> descriptive_stats
descriptive_stats
library(skimr)
install.packages('skimr')
library(skimr)
skim(wine_raw)
? skim
skim_without_charts(wine_raw, )
skim_without_charts(wine_raw)
skim_with(wine_raw, integer = list(hist = NULL))
skim_with(integer = list(hist = NULL))
skim(wine_raw)
skim_without_charts(wine_raw)
wine_raw %>%
skim_without_charts()
wine_raw %>%
summarise_all(
lmean,
sd,
min,
max
) -> descriptive_stats
wine_raw %>%
summarise_all(
mean,
sd,
min,
max
) -> descriptive_stats
wine_raw %>%
summarise_all(mean, na.rm=TRUE)
wine_raw %>%
summarise_all(mean, na.rm=TRUE) -> out
View(out)
wine_raw %>%
summarise_all(list(mean,max), na.rm=TRUE) -> out
View(out)
wine_raw %>%
summarise_all(
list(mean,
sd,
min,
max
)
) -> descriptive_stats
View(descriptive_stats)
wine_raw %>%
summarise_all(
c(mean,
sd,
min,
max
)
) -> descriptive_stats
descriptive_stats
View(out)
View(descriptive_stats)
View(vino)
hist(wine_raw$quality)
library(summarytools)
install.packages("summarytools")
library(summarytools)
descr(wine_raw)
str(descr(wine_raw))
plot.design(quality ~ fixed_acidity + citric_acid + residual_sugar,
data = vino,
main="Gráfica de efectos",
ylab="Promedio de quality",
xlab="Factores",
cex=1)
plot.design(quality ~ fixed_acidity + citric_acid ,
data = vino,
main="Gráfica de efectos",
ylab="Promedio de quality",
xlab="Factores",
cex=1)
library(GGally)
install.packages('GGally')
library(GGally)
ggpairs(wine_raw, title="correlogram with ggpairs()")
cov(wine_raw$`fixed acidity`,wine_raw$`volatile acidity`)
cov(wine_raw)
? cov
View(wine_raw)
View(wine_raw)
read_delim(
file = "data/winequality-red.csv",
delim = ",",
locale=locale(decimal_mark = ".")
) -> wine_raw
## Revisar la estructura de los datos
str(wine_raw)
## Le decimos a R que vamos a trabajar con esos datos y se los ponemos "en primer plano"
attach(wine_raw)
names(wine_raw) <- str_replace_all(names(wine_raw), c(" " = "_"))
View(wine_raw)
View(wine_raw)
## Covarianza entre dos variables
cov(fixed_acidity, quality)
View(wine_raw)
## Covarianza entre dos variables
cov(wine_raw$fixed_acidity, wine_raw$quality)
View(wine_raw)
## Covarianzas entre dos variables
cov(wine_raw$fixed_acidity, wine_raw$quality)
cov(wine_raw$chlorides, wine_raw$quality)
cov2cor(wine_raw)
cov(wine_raw)
?cor
plot(wine_raw$residual_sugar, wine_raw$quality)
plot(wine_raw$alcohol, wine_raw$quality)
esquisser(wine_raw, viewer='browser')
plot(wine_raw$volatile_acidity, wine_raw$quality)
esquisser(wine_raw, viewer='browser')
plot(wine_raw)
var_interes = c('volatile_acidity','citric_acid','sulphates','alcohol')
ggpairs(
wine_raw,
title="Correlograma",
columns = var_interes
)
var_interes = c('volatile_acidity','citric_acid','sulphates','alcohol','quality')
ggpairs(
wine_raw,
title="Correlograma",
columns = var_interes
)
ggcorr(
data,
method = c("everything", "pearson"),
columns = var_interes
)
ggcorr(
data,
method = c("everything", "pearson")
)
ggcorr(
wine_raw,
method = c("everything", "pearson"),
columns = var_interes
)
ggcorr(
wine_raw,
method = c("everything", "pearson")
)
ggcorr(
wine_raw,
method = c("everything", "pearson"),
label_size = 2
)
ggcorr(
wine_raw,
method = c("everything", "pearson"),
size = 3
)
ggcorr(
wine_raw,
method = c("everything", "pearson"),
size = 2
)
g <- ggplot(wine_raw, aes(quality, alcohol))
g + geom_boxplot(varwidth=T, fill="plum") +
labs(title="Box plot",
subtitle="Porcentaje de alcohol agrupado por calidad del vino",
x="Calidad",
y="Porcentaje de alcohol")
install.packages('qualityTools')
library('qualityTools')
mvPlot(wine_raw$quality, wine_raw$alcohol)
mvPlot(wine_raw$quality, wine_raw$alcohol, wine_raw$citric_acid)
with(wine_raw, {
interaction.plot(ALMIDON, pALMIDON, APARENTE,
ylab="Promedio de APARENTE",
xlab="Almidón",
trace.label = "%Almidón")
interaction.plot(ALMIDON, pGLICERINA, APARENTE,
ylab="Promedio de APARENTE",
xlab="Almidón",
trace.label = "%Glicerina")
interaction.plot(pALMIDON, pGLICERINA, APARENTE,
ylab="Promedio de APARENTE",
xlab="%Almidón",
trace.label = "%Glicerina")
}
)
interaction.plot(
x.factor = wine_raw$quality,
response = wine_raw$alcohol
)
esquisser(wine_raw, viewer='browser')
p <- ggplot(wine_raw, aes(quality, alcohol))
p + geom_boxplot()
p <- ggplot(wine_raw, aes(as.factor(quality), alcohol))
p + geom_boxplot()
read_delim(
file = "data/DatasaurusDozen.tsv",
delim = " ",
locale=locale(decimal_mark = ".")
) -> ds
View(ds)
read_delim(
file = "data/DatasaurusDozen.tsv",
delim = "|",
locale=locale(decimal_mark = ".")
) -> ds
read_delim(
file = "data/DatasaurusDozen.tsv",
delim = "  ",
locale=locale(decimal_mark = ".")
) -> ds
read_delim(
file = "data/DatasaurusDozen.tsv",
delim = "\t",
locale=locale(decimal_mark = ".")
) -> ds
View(ds)
str(ds)
ds %>%
mutate_at(dataset, factor) -> ds1
ds %>%
mutate_at('dataset', factor) -> ds1
str(ds1)
read_delim(
file = "data/DatasaurusDozen-wide.tsv",
delim = "\t",
locale=locale(decimal_mark = ".")
) -> ds
View(ds)
read_delim(
file = "data/DatasaurusDozen.tsv",
delim = "\t",
locale=locale(decimal_mark = ".")
) -> ds
str(ds)
ds %>%
mutate_at('dataset', factor) -> ds1
str(ds1)
descriptive_stats <- group_by(ds1, dataset) %>%
summarise(
count = n(),
mean = mean(x, na.rm = TRUE),
sd = sd(x, na.rm = TRUE)
)
descriptive_stats
plot(ds1$dataset=='away')
away = ds1$dataset=='away'
away = ds1$dataset=='away'
away = ds1[dataset=='away']
away = ds1[ds1$dataset=='away']
wine_raw %>%
mutate_at('quality', factor) -> wine_processed
wine_processed %>%
filter(quality <= 4) %>%
mutate(
calidad = 'baja'
) -> xx
wine_processed %>%
filter(quality == 3 || quality == 4) %>%
mutate(
calidad = 'baja'
) -> xx
View(xx)
wine_processed %>%
filter(quality == '3' || quality == '4') %>%
mutate(
calidad = 'baja'
) -> xx
wine_raw %>%
mutate(
calidad = ifelse(
quality == '3' | quality == '4','baja',
ifelse(
quality == '5' | quality == '6','media','alta'))
) -> xx
View(xx)
cov(wine_raw$fixed_acidity, wine_raw$calidad)
cov(wine_processed$fixed_acidity, wine_processed$calidad)
View(wine_processed)
wine_raw %>%
mutate(
calidad = ifelse(
quality == '3' | quality == '4','baja',
ifelse(
quality == '5' | quality == '6','media',
'alta'))
) -> wine_processed
View(wine_processed)
cov(wine_processed$fixed_acidity, wine_processed$calidad)
cor(wine_raw$fixed_acidity, wine_raw$quality)
cor(wine_raw$fixed_acidity, wine_raw$quality, method = 'spearman')
?cor
reg_logistic <- glm(calidad ~ alcohol, data = wine_processed, family = "binomial")
str(wine_processed)
wine_raw %>%
mutate(
calidad = ifelse(
quality == '3' | quality == '4','baja',
ifelse(
quality == '5' | quality == '6','media',
'alta'))
) %>%
mutate_at('calidad', factor) -> wine_processed
str(wine_processed)
reg_logistic <- glm(calidad ~ alcohol, data = wine_processed, family = "binomial")
summary(reg_logistic)
reg_logistic <- glm(alcohol ~ calidad, data = wine_processed, family = "binomial")
summary(reg_logistic)
reg_logistic <- glm(calidad ~ alcohol, data = wine_processed, family = "binomial")
summary(reg_logistic)
reg_logistic <- glm(calidad ~ alcohol, data = wine_processed, family = "binomial")
summary(reg_logistic)
kruskal.test(wine_processed$calidad, wine_processed$alcohol)
kruskal.test(wine_processed$alcohol, wine_processed$calidad)
?kruskal.test
kruskal.test(wine_processed$alcohol, wine_processed$calidad)
esquisser(wine_processed, viewer='browser')
ggplot(data = wine_processed) +
aes(x = calidad, y = alcohol) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
esquisser(wine_processed, viewer='browser')
ggplot(data = wine_processed) +
aes(x = alcohol, y = calidad) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
ggplot(data = wine_processed) +
aes(x = calidad, y = alcohol) +
geom_boxplot(fill = "#0c4c8a") +
theme_minimal()
plot(wine_processed$volatile_acidity)
hist(wine_processed$volatile_acidity)
wine_raw %>%
mutate(
calidad = ifelse(
quality == '3' | quality == '4','baja',
ifelse(
quality == '5' | quality == '6','media',
'alta'))
) %>%
mutate_at('calidad', factor) %>%
mutate(
acetico = ifelse(volatile_acidity < 0.7, 'bajo', 'alto')
) %>%
mutate_at('acetico', factor) -> wine_processed
View(wine_processed)
count(wine_processed$acetico)
plot(wine_processed$acetico)
esquisser(wine_processed, viewer='browser')
tbl = table(wine_processed$acetico, wine_processed$calidad)
tbl
# Damos nombre a las columnas y las filas
colnames(tbl) <- c("Calidad alta", "Calidad baja", "Calidad media")
rownames(tbl) <- c("Ácido acético alto","Ácido acético bajo")
tbl
chisq.test(tbl)
?kruskal.test
library("tidyverse")
read_delim(
file = "data/winequality-red.csv",
delim = ",",
locale=locale(decimal_mark = ".")
) -> wine_raw
## Revisar la estructura de los datos
str(wine_raw)
## Le decimos a R que vamos a trabajar con esos datos y se los ponemos "en primer plano"
attach(wine_raw)
2+2
plot(density(alcohol),
main="Gráfico de densidad: Porcentaje de alcohol",
ylab="Frecuencia",
sub=paste("Asimetría:", round(e1071::skewness(alcohol), 2)))
polygon(density(alcohol), col="red")
plot(density(quality),
main="Gráfico de densidad: Calidad del vino",
ylab="Frecuencia",
sub=paste("Asimetría:", round(e1071::skewness(quality), 2)))
polygon(density(quality), col="red")
boxplot(quality,
main="Calidad del vino",
sub=paste("Outliers: ", boxplot.stats(quality)$out))
boxplot(alcohol,
main="Porcentaje de alcohol",
sub=paste("Outliers: ", boxplot.stats(alcohol)$out))
# Sintaxis: lm(variable_respuesta ~ variable_explicativa + ..., data=data)
modelo.lineal <- lm(quality ~ alcohol, data=wine_raw)
print(modelo.lineal)
quality = 1.8750 * alcohol
